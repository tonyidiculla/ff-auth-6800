/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/auth/profile/route";
exports.ids = ["app/api/auth/profile/route"];
exports.modules = {

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fauth%2Fprofile%2Froute&page=%2Fapi%2Fauth%2Fprofile%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fauth%2Fprofile%2Froute.ts&appDir=%2FUsers%2Ftonyidiculla%2FDeveloper%2Ffurfield-new%2Fff-auth-6800%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Ftonyidiculla%2FDeveloper%2Ffurfield-new%2Fff-auth-6800&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D&isGlobalNotFoundEnabled=!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fauth%2Fprofile%2Froute&page=%2Fapi%2Fauth%2Fprofile%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fauth%2Fprofile%2Froute.ts&appDir=%2FUsers%2Ftonyidiculla%2FDeveloper%2Ffurfield-new%2Fff-auth-6800%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Ftonyidiculla%2FDeveloper%2Ffurfield-new%2Fff-auth-6800&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D&isGlobalNotFoundEnabled=! ***!
  \*********************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   handler: () => (/* binding */ handler),\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   workAsyncStorage: () => (/* binding */ workAsyncStorage),\n/* harmony export */   workUnitAsyncStorage: () => (/* binding */ workUnitAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/route-kind */ \"(rsc)/./node_modules/next/dist/server/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! next/dist/server/request-meta */ \"(rsc)/./node_modules/next/dist/server/request-meta.js\");\n/* harmony import */ var next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! next/dist/server/lib/trace/tracer */ \"(rsc)/./node_modules/next/dist/server/lib/trace/tracer.js\");\n/* harmony import */ var next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var next_dist_shared_lib_router_utils_app_paths__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! next/dist/shared/lib/router/utils/app-paths */ \"next/dist/shared/lib/router/utils/app-paths\");\n/* harmony import */ var next_dist_shared_lib_router_utils_app_paths__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(next_dist_shared_lib_router_utils_app_paths__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! next/dist/server/base-http/node */ \"(rsc)/./node_modules/next/dist/server/base-http/node.js\");\n/* harmony import */ var next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_6__);\n/* harmony import */ var next_dist_server_web_spec_extension_adapters_next_request__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! next/dist/server/web/spec-extension/adapters/next-request */ \"(rsc)/./node_modules/next/dist/server/web/spec-extension/adapters/next-request.js\");\n/* harmony import */ var next_dist_server_web_spec_extension_adapters_next_request__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_web_spec_extension_adapters_next_request__WEBPACK_IMPORTED_MODULE_7__);\n/* harmony import */ var next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! next/dist/server/lib/trace/constants */ \"(rsc)/./node_modules/next/dist/server/lib/trace/constants.js\");\n/* harmony import */ var next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_8__);\n/* harmony import */ var next_dist_server_instrumentation_utils__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! next/dist/server/instrumentation/utils */ \"(rsc)/./node_modules/next/dist/server/instrumentation/utils.js\");\n/* harmony import */ var next_dist_server_send_response__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! next/dist/server/send-response */ \"(rsc)/./node_modules/next/dist/server/send-response.js\");\n/* harmony import */ var next_dist_server_web_utils__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! next/dist/server/web/utils */ \"(rsc)/./node_modules/next/dist/server/web/utils.js\");\n/* harmony import */ var next_dist_server_web_utils__WEBPACK_IMPORTED_MODULE_11___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_web_utils__WEBPACK_IMPORTED_MODULE_11__);\n/* harmony import */ var next_dist_server_lib_cache_control__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! next/dist/server/lib/cache-control */ \"(rsc)/./node_modules/next/dist/server/lib/cache-control.js\");\n/* harmony import */ var next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! next/dist/lib/constants */ \"(rsc)/./node_modules/next/dist/lib/constants.js\");\n/* harmony import */ var next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13___default = /*#__PURE__*/__webpack_require__.n(next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__);\n/* harmony import */ var next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! next/dist/shared/lib/no-fallback-error.external */ \"next/dist/shared/lib/no-fallback-error.external\");\n/* harmony import */ var next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_14___default = /*#__PURE__*/__webpack_require__.n(next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_14__);\n/* harmony import */ var next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! next/dist/server/response-cache */ \"(rsc)/./node_modules/next/dist/server/response-cache/index.js\");\n/* harmony import */ var next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_15___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_15__);\n/* harmony import */ var _Users_tonyidiculla_Developer_furfield_new_ff_auth_6800_src_app_api_auth_profile_route_ts__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./src/app/api/auth/profile/route.ts */ \"(rsc)/./src/app/api/auth/profile/route.ts\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/auth/profile/route\",\n        pathname: \"/api/auth/profile\",\n        filename: \"route\",\n        bundlePath: \"app/api/auth/profile/route\"\n    },\n    distDir: \".next\" || 0,\n    relativeProjectDir:  false || '',\n    resolvedPagePath: \"/Users/tonyidiculla/Developer/furfield-new/ff-auth-6800/src/app/api/auth/profile/route.ts\",\n    nextConfigOutput,\n    userland: _Users_tonyidiculla_Developer_furfield_new_ff_auth_6800_src_app_api_auth_profile_route_ts__WEBPACK_IMPORTED_MODULE_16__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { workAsyncStorage, workUnitAsyncStorage, serverHooks } = routeModule;\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        workAsyncStorage,\n        workUnitAsyncStorage\n    });\n}\n\nasync function handler(req, res, ctx) {\n    var _nextConfig_experimental;\n    let srcPage = \"/api/auth/profile/route\";\n    // turbopack doesn't normalize `/index` in the page name\n    // so we need to to process dynamic routes properly\n    // TODO: fix turbopack providing differing value from webpack\n    if (false) {} else if (srcPage === '/index') {\n        // we always normalize /index specifically\n        srcPage = '/';\n    }\n    const multiZoneDraftMode = false;\n    const prepareResult = await routeModule.prepare(req, res, {\n        srcPage,\n        multiZoneDraftMode\n    });\n    if (!prepareResult) {\n        res.statusCode = 400;\n        res.end('Bad Request');\n        ctx.waitUntil == null ? void 0 : ctx.waitUntil.call(ctx, Promise.resolve());\n        return null;\n    }\n    const { buildId, params, nextConfig, isDraftMode, prerenderManifest, routerServerContext, isOnDemandRevalidate, revalidateOnlyGenerated, resolvedPathname } = prepareResult;\n    const normalizedSrcPage = (0,next_dist_shared_lib_router_utils_app_paths__WEBPACK_IMPORTED_MODULE_5__.normalizeAppPath)(srcPage);\n    let isIsr = Boolean(prerenderManifest.dynamicRoutes[normalizedSrcPage] || prerenderManifest.routes[resolvedPathname]);\n    if (isIsr && !isDraftMode) {\n        const isPrerendered = Boolean(prerenderManifest.routes[resolvedPathname]);\n        const prerenderInfo = prerenderManifest.dynamicRoutes[normalizedSrcPage];\n        if (prerenderInfo) {\n            if (prerenderInfo.fallback === false && !isPrerendered) {\n                throw new next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_14__.NoFallbackError();\n            }\n        }\n    }\n    let cacheKey = null;\n    if (isIsr && !routeModule.isDev && !isDraftMode) {\n        cacheKey = resolvedPathname;\n        // ensure /index and / is normalized to one key\n        cacheKey = cacheKey === '/index' ? '/' : cacheKey;\n    }\n    const supportsDynamicResponse = // If we're in development, we always support dynamic HTML\n    routeModule.isDev === true || // If this is not SSG or does not have static paths, then it supports\n    // dynamic HTML.\n    !isIsr;\n    // This is a revalidation request if the request is for a static\n    // page and it is not being resumed from a postponed render and\n    // it is not a dynamic RSC request then it is a revalidation\n    // request.\n    const isRevalidate = isIsr && !supportsDynamicResponse;\n    const method = req.method || 'GET';\n    const tracer = (0,next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_4__.getTracer)();\n    const activeSpan = tracer.getActiveScopeSpan();\n    const context = {\n        params,\n        prerenderManifest,\n        renderOpts: {\n            experimental: {\n                cacheComponents: Boolean(nextConfig.experimental.cacheComponents),\n                authInterrupts: Boolean(nextConfig.experimental.authInterrupts)\n            },\n            supportsDynamicResponse,\n            incrementalCache: (0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__.getRequestMeta)(req, 'incrementalCache'),\n            cacheLifeProfiles: (_nextConfig_experimental = nextConfig.experimental) == null ? void 0 : _nextConfig_experimental.cacheLife,\n            isRevalidate,\n            waitUntil: ctx.waitUntil,\n            onClose: (cb)=>{\n                res.on('close', cb);\n            },\n            onAfterTaskError: undefined,\n            onInstrumentationRequestError: (error, _request, errorContext)=>routeModule.onRequestError(req, error, errorContext, routerServerContext)\n        },\n        sharedContext: {\n            buildId\n        }\n    };\n    const nodeNextReq = new next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_6__.NodeNextRequest(req);\n    const nodeNextRes = new next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_6__.NodeNextResponse(res);\n    const nextReq = next_dist_server_web_spec_extension_adapters_next_request__WEBPACK_IMPORTED_MODULE_7__.NextRequestAdapter.fromNodeNextRequest(nodeNextReq, (0,next_dist_server_web_spec_extension_adapters_next_request__WEBPACK_IMPORTED_MODULE_7__.signalFromNodeResponse)(res));\n    try {\n        const invokeRouteModule = async (span)=>{\n            return routeModule.handle(nextReq, context).finally(()=>{\n                if (!span) return;\n                span.setAttributes({\n                    'http.status_code': res.statusCode,\n                    'next.rsc': false\n                });\n                const rootSpanAttributes = tracer.getRootSpanAttributes();\n                // We were unable to get attributes, probably OTEL is not enabled\n                if (!rootSpanAttributes) {\n                    return;\n                }\n                if (rootSpanAttributes.get('next.span_type') !== next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_8__.BaseServerSpan.handleRequest) {\n                    console.warn(`Unexpected root span type '${rootSpanAttributes.get('next.span_type')}'. Please report this Next.js issue https://github.com/vercel/next.js`);\n                    return;\n                }\n                const route = rootSpanAttributes.get('next.route');\n                if (route) {\n                    const name = `${method} ${route}`;\n                    span.setAttributes({\n                        'next.route': route,\n                        'http.route': route,\n                        'next.span_name': name\n                    });\n                    span.updateName(name);\n                } else {\n                    span.updateName(`${method} ${req.url}`);\n                }\n            });\n        };\n        const handleResponse = async (currentSpan)=>{\n            var _cacheEntry_value;\n            const responseGenerator = async ({ previousCacheEntry })=>{\n                try {\n                    if (!(0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__.getRequestMeta)(req, 'minimalMode') && isOnDemandRevalidate && revalidateOnlyGenerated && !previousCacheEntry) {\n                        res.statusCode = 404;\n                        // on-demand revalidate always sets this header\n                        res.setHeader('x-nextjs-cache', 'REVALIDATED');\n                        res.end('This page could not be found');\n                        return null;\n                    }\n                    const response = await invokeRouteModule(currentSpan);\n                    req.fetchMetrics = context.renderOpts.fetchMetrics;\n                    let pendingWaitUntil = context.renderOpts.pendingWaitUntil;\n                    // Attempt using provided waitUntil if available\n                    // if it's not we fallback to sendResponse's handling\n                    if (pendingWaitUntil) {\n                        if (ctx.waitUntil) {\n                            ctx.waitUntil(pendingWaitUntil);\n                            pendingWaitUntil = undefined;\n                        }\n                    }\n                    const cacheTags = context.renderOpts.collectedTags;\n                    // If the request is for a static response, we can cache it so long\n                    // as it's not edge.\n                    if (isIsr) {\n                        const blob = await response.blob();\n                        // Copy the headers from the response.\n                        const headers = (0,next_dist_server_web_utils__WEBPACK_IMPORTED_MODULE_11__.toNodeOutgoingHttpHeaders)(response.headers);\n                        if (cacheTags) {\n                            headers[next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__.NEXT_CACHE_TAGS_HEADER] = cacheTags;\n                        }\n                        if (!headers['content-type'] && blob.type) {\n                            headers['content-type'] = blob.type;\n                        }\n                        const revalidate = typeof context.renderOpts.collectedRevalidate === 'undefined' || context.renderOpts.collectedRevalidate >= next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__.INFINITE_CACHE ? false : context.renderOpts.collectedRevalidate;\n                        const expire = typeof context.renderOpts.collectedExpire === 'undefined' || context.renderOpts.collectedExpire >= next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__.INFINITE_CACHE ? undefined : context.renderOpts.collectedExpire;\n                        // Create the cache entry for the response.\n                        const cacheEntry = {\n                            value: {\n                                kind: next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_15__.CachedRouteKind.APP_ROUTE,\n                                status: response.status,\n                                body: Buffer.from(await blob.arrayBuffer()),\n                                headers\n                            },\n                            cacheControl: {\n                                revalidate,\n                                expire\n                            }\n                        };\n                        return cacheEntry;\n                    } else {\n                        // send response without caching if not ISR\n                        await (0,next_dist_server_send_response__WEBPACK_IMPORTED_MODULE_10__.sendResponse)(nodeNextReq, nodeNextRes, response, context.renderOpts.pendingWaitUntil);\n                        return null;\n                    }\n                } catch (err) {\n                    // if this is a background revalidate we need to report\n                    // the request error here as it won't be bubbled\n                    if (previousCacheEntry == null ? void 0 : previousCacheEntry.isStale) {\n                        await routeModule.onRequestError(req, err, {\n                            routerKind: 'App Router',\n                            routePath: srcPage,\n                            routeType: 'route',\n                            revalidateReason: (0,next_dist_server_instrumentation_utils__WEBPACK_IMPORTED_MODULE_9__.getRevalidateReason)({\n                                isRevalidate,\n                                isOnDemandRevalidate\n                            })\n                        }, routerServerContext);\n                    }\n                    throw err;\n                }\n            };\n            const cacheEntry = await routeModule.handleResponse({\n                req,\n                nextConfig,\n                cacheKey,\n                routeKind: next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n                isFallback: false,\n                prerenderManifest,\n                isRoutePPREnabled: false,\n                isOnDemandRevalidate,\n                revalidateOnlyGenerated,\n                responseGenerator,\n                waitUntil: ctx.waitUntil\n            });\n            // we don't create a cacheEntry for ISR\n            if (!isIsr) {\n                return null;\n            }\n            if ((cacheEntry == null ? void 0 : (_cacheEntry_value = cacheEntry.value) == null ? void 0 : _cacheEntry_value.kind) !== next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_15__.CachedRouteKind.APP_ROUTE) {\n                var _cacheEntry_value1;\n                throw Object.defineProperty(new Error(`Invariant: app-route received invalid cache entry ${cacheEntry == null ? void 0 : (_cacheEntry_value1 = cacheEntry.value) == null ? void 0 : _cacheEntry_value1.kind}`), \"__NEXT_ERROR_CODE\", {\n                    value: \"E701\",\n                    enumerable: false,\n                    configurable: true\n                });\n            }\n            if (!(0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__.getRequestMeta)(req, 'minimalMode')) {\n                res.setHeader('x-nextjs-cache', isOnDemandRevalidate ? 'REVALIDATED' : cacheEntry.isMiss ? 'MISS' : cacheEntry.isStale ? 'STALE' : 'HIT');\n            }\n            // Draft mode should never be cached\n            if (isDraftMode) {\n                res.setHeader('Cache-Control', 'private, no-cache, no-store, max-age=0, must-revalidate');\n            }\n            const headers = (0,next_dist_server_web_utils__WEBPACK_IMPORTED_MODULE_11__.fromNodeOutgoingHttpHeaders)(cacheEntry.value.headers);\n            if (!((0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__.getRequestMeta)(req, 'minimalMode') && isIsr)) {\n                headers.delete(next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__.NEXT_CACHE_TAGS_HEADER);\n            }\n            // If cache control is already set on the response we don't\n            // override it to allow users to customize it via next.config\n            if (cacheEntry.cacheControl && !res.getHeader('Cache-Control') && !headers.get('Cache-Control')) {\n                headers.set('Cache-Control', (0,next_dist_server_lib_cache_control__WEBPACK_IMPORTED_MODULE_12__.getCacheControlHeader)(cacheEntry.cacheControl));\n            }\n            await (0,next_dist_server_send_response__WEBPACK_IMPORTED_MODULE_10__.sendResponse)(nodeNextReq, nodeNextRes, new Response(cacheEntry.value.body, {\n                headers,\n                status: cacheEntry.value.status || 200\n            }));\n            return null;\n        };\n        // TODO: activeSpan code path is for when wrapped by\n        // next-server can be removed when this is no longer used\n        if (activeSpan) {\n            await handleResponse(activeSpan);\n        } else {\n            await tracer.withPropagatedContext(req.headers, ()=>tracer.trace(next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_8__.BaseServerSpan.handleRequest, {\n                    spanName: `${method} ${req.url}`,\n                    kind: next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_4__.SpanKind.SERVER,\n                    attributes: {\n                        'http.method': method,\n                        'http.target': req.url\n                    }\n                }, handleResponse));\n        }\n    } catch (err) {\n        if (!(err instanceof next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_14__.NoFallbackError)) {\n            await routeModule.onRequestError(req, err, {\n                routerKind: 'App Router',\n                routePath: normalizedSrcPage,\n                routeType: 'route',\n                revalidateReason: (0,next_dist_server_instrumentation_utils__WEBPACK_IMPORTED_MODULE_9__.getRevalidateReason)({\n                    isRevalidate,\n                    isOnDemandRevalidate\n                })\n            });\n        }\n        // rethrow so that we can handle serving error page\n        // If this is during static generation, throw the error again.\n        if (isIsr) throw err;\n        // Otherwise, send a 500 response.\n        await (0,next_dist_server_send_response__WEBPACK_IMPORTED_MODULE_10__.sendResponse)(nodeNextReq, nodeNextRes, new Response(null, {\n            status: 500\n        }));\n        return null;\n    }\n}\n\n//# sourceMappingURL=app-route.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fauth%2Fprofile%2Froute&page=%2Fapi%2Fauth%2Fprofile%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fauth%2Fprofile%2Froute.ts&appDir=%2FUsers%2Ftonyidiculla%2FDeveloper%2Ffurfield-new%2Fff-auth-6800%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Ftonyidiculla%2FDeveloper%2Ffurfield-new%2Fff-auth-6800&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D&isGlobalNotFoundEnabled=!\n");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true!":
/*!******************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true! ***!
  \******************************************************************************************************/
/***/ (() => {



/***/ }),

/***/ "(rsc)/./src/app/api/auth/profile/route.ts":
/*!*******************************************!*\
  !*** ./src/app/api/auth/profile/route.ts ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GET: () => (/* binding */ GET),\n/* harmony export */   PUT: () => (/* binding */ PUT)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(rsc)/./node_modules/next/dist/api/server.js\");\n/* harmony import */ var _lib_auth__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/lib/auth */ \"(rsc)/./src/lib/auth.ts\");\n/* harmony import */ var _lib_database__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/lib/database */ \"(rsc)/./src/lib/database.ts\");\n\n\n\nasync function GET(req) {\n    try {\n        const authHeader = req.headers.get('authorization');\n        const token = _lib_auth__WEBPACK_IMPORTED_MODULE_1__.AuthService.extractTokenFromHeader(authHeader);\n        if (!token) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                success: false,\n                error: 'No token provided'\n            }, {\n                status: 401\n            });\n        }\n        // Verify token\n        const decoded = _lib_auth__WEBPACK_IMPORTED_MODULE_1__.AuthService.verifyToken(token);\n        // Get user details\n        const user = await _lib_database__WEBPACK_IMPORTED_MODULE_2__.UserService.findById(decoded.userId);\n        if (!user) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                success: false,\n                error: 'User not found'\n            }, {\n                status: 404\n            });\n        }\n        console.log('📤 /api/auth/profile returning user with avatarUrl:', user.avatarUrl);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: true,\n            data: {\n                user\n            }\n        });\n    } catch (error) {\n        console.error('Profile error:', error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: false,\n            error: 'Invalid token'\n        }, {\n            status: 401\n        });\n    }\n}\nasync function PUT(req) {\n    try {\n        const authHeader = req.headers.get('authorization');\n        const token = _lib_auth__WEBPACK_IMPORTED_MODULE_1__.AuthService.extractTokenFromHeader(authHeader);\n        if (!token) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                success: false,\n                error: 'No token provided'\n            }, {\n                status: 401\n            });\n        }\n        // Verify token\n        const decoded = _lib_auth__WEBPACK_IMPORTED_MODULE_1__.AuthService.verifyToken(token);\n        const { firstName, lastName } = await req.json();\n        // Validate input\n        if (!firstName || !lastName) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                success: false,\n                error: 'First name and last name are required'\n            }, {\n                status: 400\n            });\n        }\n        // Update user\n        const updatedUser = await _lib_database__WEBPACK_IMPORTED_MODULE_2__.UserService.update(decoded.userId, {\n            firstName,\n            lastName\n        });\n        if (!updatedUser) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                success: false,\n                error: 'User not found'\n            }, {\n                status: 404\n            });\n        }\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: true,\n            data: {\n                user: updatedUser\n            },\n            message: 'Profile updated successfully'\n        });\n    } catch (error) {\n        console.error('Profile update error:', error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: false,\n            error: 'Invalid token'\n        }, {\n            status: 401\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9zcmMvYXBwL2FwaS9hdXRoL3Byb2ZpbGUvcm91dGUudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBd0Q7QUFDZjtBQUNJO0FBRXRDLGVBQWVHLElBQUlDLEdBQWdCO0lBQ3hDLElBQUk7UUFDRixNQUFNQyxhQUFhRCxJQUFJRSxPQUFPLENBQUNDLEdBQUcsQ0FBQztRQUNuQyxNQUFNQyxRQUFRUCxrREFBV0EsQ0FBQ1Esc0JBQXNCLENBQUNKO1FBRWpELElBQUksQ0FBQ0csT0FBTztZQUNWLE9BQU9SLHFEQUFZQSxDQUFDVSxJQUFJLENBQ3RCO2dCQUFFQyxTQUFTO2dCQUFPQyxPQUFPO1lBQW9CLEdBQzdDO2dCQUFFQyxRQUFRO1lBQUk7UUFFbEI7UUFFQSxlQUFlO1FBQ2YsTUFBTUMsVUFBVWIsa0RBQVdBLENBQUNjLFdBQVcsQ0FBQ1A7UUFFeEMsbUJBQW1CO1FBQ25CLE1BQU1RLE9BQU8sTUFBTWQsc0RBQVdBLENBQUNlLFFBQVEsQ0FBQ0gsUUFBUUksTUFBTTtRQUN0RCxJQUFJLENBQUNGLE1BQU07WUFDVCxPQUFPaEIscURBQVlBLENBQUNVLElBQUksQ0FDdEI7Z0JBQUVDLFNBQVM7Z0JBQU9DLE9BQU87WUFBaUIsR0FDMUM7Z0JBQUVDLFFBQVE7WUFBSTtRQUVsQjtRQUVBTSxRQUFRQyxHQUFHLENBQUMsdURBQXVESixLQUFLSyxTQUFTO1FBRWpGLE9BQU9yQixxREFBWUEsQ0FBQ1UsSUFBSSxDQUFDO1lBQ3ZCQyxTQUFTO1lBQ1RXLE1BQU07Z0JBQUVOO1lBQUs7UUFDZjtJQUNGLEVBQUUsT0FBT0osT0FBTztRQUNkTyxRQUFRUCxLQUFLLENBQUMsa0JBQWtCQTtRQUNoQyxPQUFPWixxREFBWUEsQ0FBQ1UsSUFBSSxDQUN0QjtZQUFFQyxTQUFTO1lBQU9DLE9BQU87UUFBZ0IsR0FDekM7WUFBRUMsUUFBUTtRQUFJO0lBRWxCO0FBQ0Y7QUFFTyxlQUFlVSxJQUFJbkIsR0FBZ0I7SUFDeEMsSUFBSTtRQUNGLE1BQU1DLGFBQWFELElBQUlFLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDO1FBQ25DLE1BQU1DLFFBQVFQLGtEQUFXQSxDQUFDUSxzQkFBc0IsQ0FBQ0o7UUFFakQsSUFBSSxDQUFDRyxPQUFPO1lBQ1YsT0FBT1IscURBQVlBLENBQUNVLElBQUksQ0FDdEI7Z0JBQUVDLFNBQVM7Z0JBQU9DLE9BQU87WUFBb0IsR0FDN0M7Z0JBQUVDLFFBQVE7WUFBSTtRQUVsQjtRQUVBLGVBQWU7UUFDZixNQUFNQyxVQUFVYixrREFBV0EsQ0FBQ2MsV0FBVyxDQUFDUDtRQUV4QyxNQUFNLEVBQUVnQixTQUFTLEVBQUVDLFFBQVEsRUFBRSxHQUFHLE1BQU1yQixJQUFJTSxJQUFJO1FBRTlDLGlCQUFpQjtRQUNqQixJQUFJLENBQUNjLGFBQWEsQ0FBQ0MsVUFBVTtZQUMzQixPQUFPekIscURBQVlBLENBQUNVLElBQUksQ0FDdEI7Z0JBQUVDLFNBQVM7Z0JBQU9DLE9BQU87WUFBd0MsR0FDakU7Z0JBQUVDLFFBQVE7WUFBSTtRQUVsQjtRQUVBLGNBQWM7UUFDZCxNQUFNYSxjQUFjLE1BQU14QixzREFBV0EsQ0FBQ3lCLE1BQU0sQ0FBQ2IsUUFBUUksTUFBTSxFQUFFO1lBQzNETTtZQUNBQztRQUNGO1FBRUEsSUFBSSxDQUFDQyxhQUFhO1lBQ2hCLE9BQU8xQixxREFBWUEsQ0FBQ1UsSUFBSSxDQUN0QjtnQkFBRUMsU0FBUztnQkFBT0MsT0FBTztZQUFpQixHQUMxQztnQkFBRUMsUUFBUTtZQUFJO1FBRWxCO1FBRUEsT0FBT2IscURBQVlBLENBQUNVLElBQUksQ0FBQztZQUN2QkMsU0FBUztZQUNUVyxNQUFNO2dCQUFFTixNQUFNVTtZQUFZO1lBQzFCRSxTQUFTO1FBQ1g7SUFDRixFQUFFLE9BQU9oQixPQUFPO1FBQ2RPLFFBQVFQLEtBQUssQ0FBQyx5QkFBeUJBO1FBQ3ZDLE9BQU9aLHFEQUFZQSxDQUFDVSxJQUFJLENBQ3RCO1lBQUVDLFNBQVM7WUFBT0MsT0FBTztRQUFnQixHQUN6QztZQUFFQyxRQUFRO1FBQUk7SUFFbEI7QUFDRiIsInNvdXJjZXMiOlsiL1VzZXJzL3RvbnlpZGljdWxsYS9EZXZlbG9wZXIvZnVyZmllbGQtbmV3L2ZmLWF1dGgtNjgwMC9zcmMvYXBwL2FwaS9hdXRoL3Byb2ZpbGUvcm91dGUudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTmV4dFJlcXVlc3QsIE5leHRSZXNwb25zZSB9IGZyb20gJ25leHQvc2VydmVyJztcbmltcG9ydCB7IEF1dGhTZXJ2aWNlIH0gZnJvbSAnQC9saWIvYXV0aCc7XG5pbXBvcnQgeyBVc2VyU2VydmljZSB9IGZyb20gJ0AvbGliL2RhdGFiYXNlJztcblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIEdFVChyZXE6IE5leHRSZXF1ZXN0KSB7XG4gIHRyeSB7XG4gICAgY29uc3QgYXV0aEhlYWRlciA9IHJlcS5oZWFkZXJzLmdldCgnYXV0aG9yaXphdGlvbicpO1xuICAgIGNvbnN0IHRva2VuID0gQXV0aFNlcnZpY2UuZXh0cmFjdFRva2VuRnJvbUhlYWRlcihhdXRoSGVhZGVyKTtcblxuICAgIGlmICghdG9rZW4pIHtcbiAgICAgIHJldHVybiBOZXh0UmVzcG9uc2UuanNvbihcbiAgICAgICAgeyBzdWNjZXNzOiBmYWxzZSwgZXJyb3I6ICdObyB0b2tlbiBwcm92aWRlZCcgfSxcbiAgICAgICAgeyBzdGF0dXM6IDQwMSB9XG4gICAgICApO1xuICAgIH1cblxuICAgIC8vIFZlcmlmeSB0b2tlblxuICAgIGNvbnN0IGRlY29kZWQgPSBBdXRoU2VydmljZS52ZXJpZnlUb2tlbih0b2tlbik7XG4gICAgXG4gICAgLy8gR2V0IHVzZXIgZGV0YWlsc1xuICAgIGNvbnN0IHVzZXIgPSBhd2FpdCBVc2VyU2VydmljZS5maW5kQnlJZChkZWNvZGVkLnVzZXJJZCk7XG4gICAgaWYgKCF1c2VyKSB7XG4gICAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oXG4gICAgICAgIHsgc3VjY2VzczogZmFsc2UsIGVycm9yOiAnVXNlciBub3QgZm91bmQnIH0sXG4gICAgICAgIHsgc3RhdHVzOiA0MDQgfVxuICAgICAgKTtcbiAgICB9XG5cbiAgICBjb25zb2xlLmxvZygn8J+TpCAvYXBpL2F1dGgvcHJvZmlsZSByZXR1cm5pbmcgdXNlciB3aXRoIGF2YXRhclVybDonLCB1c2VyLmF2YXRhclVybCk7XG5cbiAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oe1xuICAgICAgc3VjY2VzczogdHJ1ZSxcbiAgICAgIGRhdGE6IHsgdXNlciB9LFxuICAgIH0pO1xuICB9IGNhdGNoIChlcnJvcikge1xuICAgIGNvbnNvbGUuZXJyb3IoJ1Byb2ZpbGUgZXJyb3I6JywgZXJyb3IpO1xuICAgIHJldHVybiBOZXh0UmVzcG9uc2UuanNvbihcbiAgICAgIHsgc3VjY2VzczogZmFsc2UsIGVycm9yOiAnSW52YWxpZCB0b2tlbicgfSxcbiAgICAgIHsgc3RhdHVzOiA0MDEgfVxuICAgICk7XG4gIH1cbn1cblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIFBVVChyZXE6IE5leHRSZXF1ZXN0KSB7XG4gIHRyeSB7XG4gICAgY29uc3QgYXV0aEhlYWRlciA9IHJlcS5oZWFkZXJzLmdldCgnYXV0aG9yaXphdGlvbicpO1xuICAgIGNvbnN0IHRva2VuID0gQXV0aFNlcnZpY2UuZXh0cmFjdFRva2VuRnJvbUhlYWRlcihhdXRoSGVhZGVyKTtcblxuICAgIGlmICghdG9rZW4pIHtcbiAgICAgIHJldHVybiBOZXh0UmVzcG9uc2UuanNvbihcbiAgICAgICAgeyBzdWNjZXNzOiBmYWxzZSwgZXJyb3I6ICdObyB0b2tlbiBwcm92aWRlZCcgfSxcbiAgICAgICAgeyBzdGF0dXM6IDQwMSB9XG4gICAgICApO1xuICAgIH1cblxuICAgIC8vIFZlcmlmeSB0b2tlblxuICAgIGNvbnN0IGRlY29kZWQgPSBBdXRoU2VydmljZS52ZXJpZnlUb2tlbih0b2tlbik7XG4gICAgXG4gICAgY29uc3QgeyBmaXJzdE5hbWUsIGxhc3ROYW1lIH0gPSBhd2FpdCByZXEuanNvbigpO1xuXG4gICAgLy8gVmFsaWRhdGUgaW5wdXRcbiAgICBpZiAoIWZpcnN0TmFtZSB8fCAhbGFzdE5hbWUpIHtcbiAgICAgIHJldHVybiBOZXh0UmVzcG9uc2UuanNvbihcbiAgICAgICAgeyBzdWNjZXNzOiBmYWxzZSwgZXJyb3I6ICdGaXJzdCBuYW1lIGFuZCBsYXN0IG5hbWUgYXJlIHJlcXVpcmVkJyB9LFxuICAgICAgICB7IHN0YXR1czogNDAwIH1cbiAgICAgICk7XG4gICAgfVxuXG4gICAgLy8gVXBkYXRlIHVzZXJcbiAgICBjb25zdCB1cGRhdGVkVXNlciA9IGF3YWl0IFVzZXJTZXJ2aWNlLnVwZGF0ZShkZWNvZGVkLnVzZXJJZCwge1xuICAgICAgZmlyc3ROYW1lLFxuICAgICAgbGFzdE5hbWUsXG4gICAgfSk7XG5cbiAgICBpZiAoIXVwZGF0ZWRVc2VyKSB7XG4gICAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oXG4gICAgICAgIHsgc3VjY2VzczogZmFsc2UsIGVycm9yOiAnVXNlciBub3QgZm91bmQnIH0sXG4gICAgICAgIHsgc3RhdHVzOiA0MDQgfVxuICAgICAgKTtcbiAgICB9XG5cbiAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oe1xuICAgICAgc3VjY2VzczogdHJ1ZSxcbiAgICAgIGRhdGE6IHsgdXNlcjogdXBkYXRlZFVzZXIgfSxcbiAgICAgIG1lc3NhZ2U6ICdQcm9maWxlIHVwZGF0ZWQgc3VjY2Vzc2Z1bGx5JyxcbiAgICB9KTtcbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICBjb25zb2xlLmVycm9yKCdQcm9maWxlIHVwZGF0ZSBlcnJvcjonLCBlcnJvcik7XG4gICAgcmV0dXJuIE5leHRSZXNwb25zZS5qc29uKFxuICAgICAgeyBzdWNjZXNzOiBmYWxzZSwgZXJyb3I6ICdJbnZhbGlkIHRva2VuJyB9LFxuICAgICAgeyBzdGF0dXM6IDQwMSB9XG4gICAgKTtcbiAgfVxufSJdLCJuYW1lcyI6WyJOZXh0UmVzcG9uc2UiLCJBdXRoU2VydmljZSIsIlVzZXJTZXJ2aWNlIiwiR0VUIiwicmVxIiwiYXV0aEhlYWRlciIsImhlYWRlcnMiLCJnZXQiLCJ0b2tlbiIsImV4dHJhY3RUb2tlbkZyb21IZWFkZXIiLCJqc29uIiwic3VjY2VzcyIsImVycm9yIiwic3RhdHVzIiwiZGVjb2RlZCIsInZlcmlmeVRva2VuIiwidXNlciIsImZpbmRCeUlkIiwidXNlcklkIiwiY29uc29sZSIsImxvZyIsImF2YXRhclVybCIsImRhdGEiLCJQVVQiLCJmaXJzdE5hbWUiLCJsYXN0TmFtZSIsInVwZGF0ZWRVc2VyIiwidXBkYXRlIiwibWVzc2FnZSJdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./src/app/api/auth/profile/route.ts\n");

/***/ }),

/***/ "(rsc)/./src/lib/auth.ts":
/*!*************************!*\
  !*** ./src/lib/auth.ts ***!
  \*************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AuthService: () => (/* binding */ AuthService)\n/* harmony export */ });\n/* harmony import */ var jsonwebtoken__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jsonwebtoken */ \"(rsc)/./node_modules/jsonwebtoken/index.js\");\n/* harmony import */ var jsonwebtoken__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jsonwebtoken__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var bcryptjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! bcryptjs */ \"(rsc)/./node_modules/bcryptjs/index.js\");\n/* harmony import */ var bcryptjs__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(bcryptjs__WEBPACK_IMPORTED_MODULE_1__);\n\n\nconst JWT_SECRET = process.env.JWT_SECRET || 'fallback-secret';\nconst JWT_EXPIRES_IN = process.env.JWT_EXPIRES_IN || '7d';\nclass AuthService {\n    /**\n   * Hash a password\n   */ static async hashPassword(password) {\n        const salt = await bcryptjs__WEBPACK_IMPORTED_MODULE_1___default().genSalt(12);\n        return bcryptjs__WEBPACK_IMPORTED_MODULE_1___default().hash(password, salt);\n    }\n    /**\n   * Verify a password against a hash\n   */ static async verifyPassword(password, hash) {\n        return bcryptjs__WEBPACK_IMPORTED_MODULE_1___default().compare(password, hash);\n    }\n    /**\n   * Generate a JWT token\n   */ static generateToken(payload) {\n        return jsonwebtoken__WEBPACK_IMPORTED_MODULE_0___default().sign(payload, JWT_SECRET, {\n            expiresIn: JWT_EXPIRES_IN\n        });\n    }\n    /**\n   * Generate a refresh token\n   */ static generateRefreshToken(userId) {\n        return jsonwebtoken__WEBPACK_IMPORTED_MODULE_0___default().sign({\n            userId,\n            type: 'refresh'\n        }, JWT_SECRET, {\n            expiresIn: '30d'\n        });\n    }\n    /**\n   * Verify and decode a JWT token\n   */ static verifyToken(token) {\n        try {\n            const decoded = jsonwebtoken__WEBPACK_IMPORTED_MODULE_0___default().verify(token, JWT_SECRET);\n            return decoded;\n        } catch (error) {\n            throw new Error('Invalid or expired token');\n        }\n    }\n    /**\n   * Verify a refresh token\n   */ static verifyRefreshToken(token) {\n        try {\n            const decoded = jsonwebtoken__WEBPACK_IMPORTED_MODULE_0___default().verify(token, JWT_SECRET);\n            if (decoded.type !== 'refresh') {\n                throw new Error('Invalid refresh token');\n            }\n            return decoded;\n        } catch (error) {\n            throw new Error('Invalid or expired refresh token');\n        }\n    }\n    /**\n   * Generate a password reset token\n   */ static generatePasswordResetToken(email) {\n        return jsonwebtoken__WEBPACK_IMPORTED_MODULE_0___default().sign({\n            email,\n            type: 'password-reset'\n        }, JWT_SECRET, {\n            expiresIn: '1h'\n        });\n    }\n    /**\n   * Verify a password reset token\n   */ static verifyPasswordResetToken(token) {\n        try {\n            const decoded = jsonwebtoken__WEBPACK_IMPORTED_MODULE_0___default().verify(token, JWT_SECRET);\n            if (decoded.type !== 'password-reset') {\n                throw new Error('Invalid password reset token');\n            }\n            return {\n                email: decoded.email\n            };\n        } catch (error) {\n            throw new Error('Invalid or expired password reset token');\n        }\n    }\n    /**\n   * Generate a secure random string for various purposes\n   */ static generateSecureRandomString(length = 32) {\n        const chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n        let result = '';\n        for(let i = 0; i < length; i++){\n            result += chars.charAt(Math.floor(Math.random() * chars.length));\n        }\n        return result;\n    }\n    /**\n   * Extract token from Authorization header\n   */ static extractTokenFromHeader(authHeader) {\n        if (!authHeader || !authHeader.startsWith('Bearer ')) {\n            return null;\n        }\n        return authHeader.substring(7);\n    }\n    /**\n   * Validate email format\n   */ static isValidEmail(email) {\n        const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n        return emailRegex.test(email);\n    }\n    /**\n   * Validate password strength\n   */ static isValidPassword(password) {\n        const errors = [];\n        if (password.length < 8) {\n            errors.push('Password must be at least 8 characters long');\n        }\n        if (!/[A-Z]/.test(password)) {\n            errors.push('Password must contain at least one uppercase letter');\n        }\n        if (!/[a-z]/.test(password)) {\n            errors.push('Password must contain at least one lowercase letter');\n        }\n        if (!/\\d/.test(password)) {\n            errors.push('Password must contain at least one number');\n        }\n        if (!/[!@#$%^&*(),.?\":{}|<>]/.test(password)) {\n            errors.push('Password must contain at least one special character');\n        }\n        return {\n            isValid: errors.length === 0,\n            errors\n        };\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/auth.ts\n");

/***/ }),

/***/ "(rsc)/./src/lib/database.ts":
/*!*****************************!*\
  !*** ./src/lib/database.ts ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   UserService: () => (/* binding */ UserService)\n/* harmony export */ });\n/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @/types */ \"(rsc)/./src/types/index.ts\");\n/* harmony import */ var _supabase__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./supabase */ \"(rsc)/./src/lib/supabase.ts\");\n\n\nclass UserService {\n    /**\n   * Find user by email using Supabase Auth\n   */ static async findByEmail(email) {\n        // Use Supabase Auth to get user\n        const { data: authData, error: authError } = await _supabase__WEBPACK_IMPORTED_MODULE_1__.supabaseAdmin.auth.admin.listUsers();\n        if (authError || !authData) {\n            console.error('Error fetching users from Supabase Auth:', authError);\n            return null;\n        }\n        const authUser = authData.users.find((u)=>u.email?.toLowerCase() === email.toLowerCase());\n        if (!authUser) {\n            return null;\n        }\n        // Get user profile and role from public schema\n        const { data: profileData, error: profileError } = await _supabase__WEBPACK_IMPORTED_MODULE_1__.supabaseAdmin.from('profiles').select('*').eq('user_id', authUser.id).single();\n        // Get role assignment separately using user_platform_id\n        let roleData = null;\n        if (profileData?.user_platform_id) {\n            const { data: roleAssignment, error: roleError } = await _supabase__WEBPACK_IMPORTED_MODULE_1__.supabaseAdmin.from('user_to_role_assignment').select(`\n          platform_roles(role_name, display_name, privilege_level)\n        `).eq('user_platform_id', profileData.user_platform_id).single();\n            if (roleError) {\n                console.error('🔴 findByEmail - Role query error:', roleError);\n            }\n            roleData = roleAssignment;\n        }\n        // Get avatar URL from storage if avatar_storage path exists\n        let avatarUrl = null;\n        if (profileData?.avatar_storage && typeof profileData.avatar_storage === 'string') {\n            const { data: urlData } = _supabase__WEBPACK_IMPORTED_MODULE_1__.supabaseAdmin.storage.from('avatars').getPublicUrl(profileData.avatar_storage);\n            avatarUrl = urlData.publicUrl;\n        }\n        if (profileError) {\n            console.error('Error fetching profile:', profileError);\n        }\n        // Extract role display name from the separate query\n        const platformRole = Array.isArray(roleData?.platform_roles) ? roleData.platform_roles[0] : roleData?.platform_roles;\n        const role = platformRole?.display_name || platformRole?.role_name || 'User';\n        // Map Supabase Auth user to our User type\n        return {\n            id: authUser.id,\n            email: authUser.email,\n            firstName: profileData?.first_name || authUser.user_metadata?.firstName || authUser.user_metadata?.first_name || '',\n            lastName: profileData?.last_name || authUser.user_metadata?.lastName || authUser.user_metadata?.last_name || '',\n            role: role,\n            isActive: profileData?.is_active ?? true,\n            emailVerified: authUser.email_confirmed_at ? true : false,\n            passwordHash: '',\n            createdAt: new Date(authUser.created_at),\n            updatedAt: new Date(authUser.updated_at || authUser.created_at),\n            lastLoginAt: authUser.last_sign_in_at ? new Date(authUser.last_sign_in_at) : undefined,\n            avatarUrl: avatarUrl || undefined\n        };\n    }\n    /**\n   * Find user by ID\n   */ static async findById(id) {\n        try {\n            // Use Supabase Auth to get user by ID\n            const { data: authData, error: authError } = await _supabase__WEBPACK_IMPORTED_MODULE_1__.supabaseAdmin.auth.admin.getUserById(id);\n            if (authError || !authData.user) {\n                console.error('Error fetching user from Supabase Auth:', authError);\n                return null;\n            }\n            const authUser = authData.user;\n            // Get user profile from public schema\n            const { data: profileData, error: profileError } = await _supabase__WEBPACK_IMPORTED_MODULE_1__.supabaseAdmin.from('profiles').select('*').eq('user_id', id).single();\n            // Get role assignment separately using user_platform_id\n            let roleData = null;\n            if (profileData?.user_platform_id) {\n                // Try without explicit FK name first\n                const { data: roleAssignment, error: roleError } = await _supabase__WEBPACK_IMPORTED_MODULE_1__.supabaseAdmin.from('user_to_role_assignment').select(`\n            platform_roles(role_name, display_name, privilege_level)\n          `).eq('user_platform_id', profileData.user_platform_id).single();\n                if (roleError) {\n                    console.error('🔴 findById - Role query error:', roleError);\n                }\n                roleData = roleAssignment;\n                console.log('🔍 findById - Role data:', {\n                    user_platform_id: profileData.user_platform_id,\n                    roleData,\n                    roleAssignment\n                });\n            } else {\n                console.log('⚠️  findById - No user_platform_id in profile');\n            }\n            // Get avatar URL from storage if avatar_storage path exists\n            let avatarUrl = null;\n            if (profileData?.avatar_storage && typeof profileData.avatar_storage === 'string') {\n                const { data: urlData } = _supabase__WEBPACK_IMPORTED_MODULE_1__.supabaseAdmin.storage.from('avatars').getPublicUrl(profileData.avatar_storage);\n                avatarUrl = urlData.publicUrl;\n            }\n            if (profileError) {\n                console.error('Error fetching profile:', profileError);\n            }\n            // Extract role display name from the separate query\n            const platformRole = Array.isArray(roleData?.platform_roles) ? roleData.platform_roles[0] : roleData?.platform_roles;\n            const role = platformRole?.display_name || platformRole?.role_name || 'User';\n            // Map Supabase Auth user to our User type\n            return {\n                id: authUser.id,\n                avatarUrl: avatarUrl || undefined,\n                email: authUser.email,\n                firstName: profileData?.first_name || authUser.user_metadata?.firstName || authUser.user_metadata?.first_name || '',\n                lastName: profileData?.last_name || authUser.user_metadata?.lastName || authUser.user_metadata?.last_name || '',\n                role: role,\n                isActive: profileData?.is_active ?? true,\n                emailVerified: authUser.email_confirmed_at ? true : false,\n                createdAt: new Date(authUser.created_at),\n                updatedAt: new Date(authUser.updated_at || authUser.created_at),\n                lastLoginAt: authUser.last_sign_in_at ? new Date(authUser.last_sign_in_at) : undefined\n            };\n        } catch (error) {\n            console.error('Error in findById:', error);\n            return null;\n        }\n    }\n    /**\n   * Create a new user\n   */ static async create(userData) {\n        const existingUser = await this.findByEmail(userData.email);\n        if (existingUser) {\n            throw new Error('User with this email already exists');\n        }\n        const newUser = {\n            id: (users.length + 1).toString(),\n            email: userData.email.toLowerCase(),\n            firstName: userData.firstName,\n            lastName: userData.lastName,\n            role: userData.role || _types__WEBPACK_IMPORTED_MODULE_0__.UserRole.USER,\n            isActive: true,\n            emailVerified: false,\n            passwordHash: userData.passwordHash,\n            createdAt: new Date(),\n            updatedAt: new Date()\n        };\n        users.push(newUser);\n        // Return user without password hash\n        const { passwordHash, ...userWithoutPassword } = newUser;\n        return userWithoutPassword;\n    }\n    /**\n   * Update user\n   */ static async update(id, updates) {\n        const userIndex = users.findIndex((u)=>u.id === id);\n        if (userIndex === -1) return null;\n        users[userIndex] = {\n            ...users[userIndex],\n            ...updates,\n            updatedAt: new Date()\n        };\n        // Return user without password hash\n        const { passwordHash, ...userWithoutPassword } = users[userIndex];\n        return userWithoutPassword;\n    }\n    /**\n   * Update user password\n   */ static async updatePassword(id, passwordHash) {\n        const userIndex = users.findIndex((u)=>u.id === id);\n        if (userIndex === -1) return false;\n        users[userIndex].passwordHash = passwordHash;\n        users[userIndex].updatedAt = new Date();\n        return true;\n    }\n    /**\n   * Update last login time\n   */ static async updateLastLogin(id) {\n        const userIndex = users.findIndex((u)=>u.id === id);\n        if (userIndex !== -1) {\n            users[userIndex].lastLoginAt = new Date();\n            users[userIndex].updatedAt = new Date();\n        }\n    }\n    /**\n   * Get all users (admin only)\n   */ static async getAll() {\n        return users.map(({ passwordHash, ...user })=>user);\n    }\n    /**\n   * Delete user\n   */ static async delete(id) {\n        const userIndex = users.findIndex((u)=>u.id === id);\n        if (userIndex === -1) return false;\n        users.splice(userIndex, 1);\n        return true;\n    }\n    /**\n   * Store refresh token\n   */ static async storeRefreshToken(token, userId, expiresAt) {\n        // Remove any existing refresh tokens for this user\n        refreshTokens = refreshTokens.filter((rt)=>rt.userId !== userId);\n        // Add new refresh token\n        refreshTokens.push({\n            token,\n            userId,\n            expiresAt\n        });\n    }\n    /**\n   * Validate refresh token\n   */ static async validateRefreshToken(token) {\n        const refreshToken = refreshTokens.find((rt)=>rt.token === token);\n        if (!refreshToken) return null;\n        if (refreshToken.expiresAt < new Date()) {\n            // Remove expired token\n            refreshTokens = refreshTokens.filter((rt)=>rt.token !== token);\n            return null;\n        }\n        return refreshToken.userId;\n    }\n    /**\n   * Remove refresh token\n   */ static async removeRefreshToken(token) {\n        refreshTokens = refreshTokens.filter((rt)=>rt.token !== token);\n    }\n    /**\n   * Remove all refresh tokens for a user\n   */ static async removeAllRefreshTokens(userId) {\n        refreshTokens = refreshTokens.filter((rt)=>rt.userId !== userId);\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/database.ts\n");

/***/ }),

/***/ "(rsc)/./src/lib/supabase.ts":
/*!*****************************!*\
  !*** ./src/lib/supabase.ts ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   supabase: () => (/* binding */ supabase),\n/* harmony export */   supabaseAdmin: () => (/* binding */ supabaseAdmin)\n/* harmony export */ });\n/* harmony import */ var _supabase_supabase_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @supabase/supabase-js */ \"(rsc)/./node_modules/@supabase/supabase-js/dist/module/index.js\");\n\nconst supabaseUrl = \"https://xnetjsifkhtbbpadwlxy.supabase.co\";\nconst supabaseAnonKey = \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InhuZXRqc2lma2h0YmJwYWR3bHh5Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTk5MDgyMjEsImV4cCI6MjA3NTQ4NDIyMX0.vNhTvxKqSq3n_OsJjOeJB57deKCp_3FHzAFJde0RNS8\";\nconst supabaseServiceKey = process.env.NEXT_SUPABASE_SECRET_ROLE_KEY;\nif (!supabaseUrl || !supabaseAnonKey) {\n    throw new Error('Missing Supabase environment variables');\n}\n// Client for frontend usage (with RLS)\nconst supabase = (0,_supabase_supabase_js__WEBPACK_IMPORTED_MODULE_0__.createClient)(supabaseUrl, supabaseAnonKey);\n// Admin client for backend/API usage (bypasses RLS)\nconst supabaseAdmin = (0,_supabase_supabase_js__WEBPACK_IMPORTED_MODULE_0__.createClient)(supabaseUrl, supabaseServiceKey, {\n    auth: {\n        autoRefreshToken: false,\n        persistSession: false\n    },\n    db: {\n        schema: 'public' // Explicitly use public schema, not master_data\n    }\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9zcmMvbGliL3N1cGFiYXNlLnRzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFxRDtBQUVyRCxNQUFNQyxjQUFjQywwQ0FBb0M7QUFDeEQsTUFBTUcsa0JBQWtCSCxrTkFBeUM7QUFDakUsTUFBTUsscUJBQXFCTCxRQUFRQyxHQUFHLENBQUNLLDZCQUE2QjtBQUVwRSxJQUFJLENBQUNQLGVBQWUsQ0FBQ0ksaUJBQWlCO0lBQ3BDLE1BQU0sSUFBSUksTUFBTTtBQUNsQjtBQUVBLHVDQUF1QztBQUNoQyxNQUFNQyxXQUFXVixtRUFBWUEsQ0FBQ0MsYUFBYUksaUJBQWlCO0FBRW5FLG9EQUFvRDtBQUM3QyxNQUFNTSxnQkFBZ0JYLG1FQUFZQSxDQUFDQyxhQUFhTSxvQkFBb0I7SUFDekVLLE1BQU07UUFDSkMsa0JBQWtCO1FBQ2xCQyxnQkFBZ0I7SUFDbEI7SUFDQUMsSUFBSTtRQUNGQyxRQUFRLFNBQVUsZ0RBQWdEO0lBQ3BFO0FBQ0YsR0FBRyIsInNvdXJjZXMiOlsiL1VzZXJzL3RvbnlpZGljdWxsYS9EZXZlbG9wZXIvZnVyZmllbGQtbmV3L2ZmLWF1dGgtNjgwMC9zcmMvbGliL3N1cGFiYXNlLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNyZWF0ZUNsaWVudCB9IGZyb20gJ0BzdXBhYmFzZS9zdXBhYmFzZS1qcyc7XG5cbmNvbnN0IHN1cGFiYXNlVXJsID0gcHJvY2Vzcy5lbnYuTkVYVF9QVUJMSUNfU1VQQUJBU0VfVVJMITtcbmNvbnN0IHN1cGFiYXNlQW5vbktleSA9IHByb2Nlc3MuZW52Lk5FWFRfUFVCTElDX1NVUEFCQVNFX0FOT05fS0VZITtcbmNvbnN0IHN1cGFiYXNlU2VydmljZUtleSA9IHByb2Nlc3MuZW52Lk5FWFRfU1VQQUJBU0VfU0VDUkVUX1JPTEVfS0VZITtcblxuaWYgKCFzdXBhYmFzZVVybCB8fCAhc3VwYWJhc2VBbm9uS2V5KSB7XG4gIHRocm93IG5ldyBFcnJvcignTWlzc2luZyBTdXBhYmFzZSBlbnZpcm9ubWVudCB2YXJpYWJsZXMnKTtcbn1cblxuLy8gQ2xpZW50IGZvciBmcm9udGVuZCB1c2FnZSAod2l0aCBSTFMpXG5leHBvcnQgY29uc3Qgc3VwYWJhc2UgPSBjcmVhdGVDbGllbnQoc3VwYWJhc2VVcmwsIHN1cGFiYXNlQW5vbktleSk7XG5cbi8vIEFkbWluIGNsaWVudCBmb3IgYmFja2VuZC9BUEkgdXNhZ2UgKGJ5cGFzc2VzIFJMUylcbmV4cG9ydCBjb25zdCBzdXBhYmFzZUFkbWluID0gY3JlYXRlQ2xpZW50KHN1cGFiYXNlVXJsLCBzdXBhYmFzZVNlcnZpY2VLZXksIHtcbiAgYXV0aDoge1xuICAgIGF1dG9SZWZyZXNoVG9rZW46IGZhbHNlLFxuICAgIHBlcnNpc3RTZXNzaW9uOiBmYWxzZVxuICB9LFxuICBkYjoge1xuICAgIHNjaGVtYTogJ3B1YmxpYycgIC8vIEV4cGxpY2l0bHkgdXNlIHB1YmxpYyBzY2hlbWEsIG5vdCBtYXN0ZXJfZGF0YVxuICB9XG59KTtcblxuLy8gRGF0YWJhc2UgdHlwZXMgZm9yIGF1dGhcbmV4cG9ydCBpbnRlcmZhY2UgRGF0YWJhc2VVc2VyIHtcbiAgaWQ6IHN0cmluZztcbiAgZW1haWw6IHN0cmluZztcbiAgZmlyc3RfbmFtZTogc3RyaW5nO1xuICBsYXN0X25hbWU6IHN0cmluZztcbiAgcm9sZTogc3RyaW5nO1xuICBpc19hY3RpdmU6IGJvb2xlYW47XG4gIGVtYWlsX3ZlcmlmaWVkOiBib29sZWFuO1xuICBwYXNzd29yZF9oYXNoOiBzdHJpbmc7XG4gIGNyZWF0ZWRfYXQ6IHN0cmluZztcbiAgdXBkYXRlZF9hdDogc3RyaW5nO1xuICBsYXN0X2xvZ2luX2F0Pzogc3RyaW5nO1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIERhdGFiYXNlUmVmcmVzaFRva2VuIHtcbiAgaWQ6IHN0cmluZztcbiAgdG9rZW46IHN0cmluZztcbiAgdXNlcl9pZDogc3RyaW5nO1xuICBleHBpcmVzX2F0OiBzdHJpbmc7XG4gIGNyZWF0ZWRfYXQ6IHN0cmluZztcbn1cbiJdLCJuYW1lcyI6WyJjcmVhdGVDbGllbnQiLCJzdXBhYmFzZVVybCIsInByb2Nlc3MiLCJlbnYiLCJORVhUX1BVQkxJQ19TVVBBQkFTRV9VUkwiLCJzdXBhYmFzZUFub25LZXkiLCJORVhUX1BVQkxJQ19TVVBBQkFTRV9BTk9OX0tFWSIsInN1cGFiYXNlU2VydmljZUtleSIsIk5FWFRfU1VQQUJBU0VfU0VDUkVUX1JPTEVfS0VZIiwiRXJyb3IiLCJzdXBhYmFzZSIsInN1cGFiYXNlQWRtaW4iLCJhdXRoIiwiYXV0b1JlZnJlc2hUb2tlbiIsInBlcnNpc3RTZXNzaW9uIiwiZGIiLCJzY2hlbWEiXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/supabase.ts\n");

/***/ }),

/***/ "(rsc)/./src/types/index.ts":
/*!****************************!*\
  !*** ./src/types/index.ts ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ServiceCategory: () => (/* binding */ ServiceCategory),\n/* harmony export */   UserRole: () => (/* binding */ UserRole)\n/* harmony export */ });\nvar UserRole = /*#__PURE__*/ function(UserRole) {\n    UserRole[\"ADMIN\"] = \"admin\";\n    UserRole[\"VETERINARIAN\"] = \"veterinarian\";\n    UserRole[\"NURSE\"] = \"nurse\";\n    UserRole[\"RECEPTIONIST\"] = \"receptionist\";\n    UserRole[\"MANAGER\"] = \"manager\";\n    UserRole[\"STAFF\"] = \"staff\";\n    UserRole[\"USER\"] = \"user\";\n    return UserRole;\n}({});\nvar ServiceCategory = /*#__PURE__*/ function(ServiceCategory) {\n    ServiceCategory[\"HEALTHCARE\"] = \"healthcare\";\n    ServiceCategory[\"MANAGEMENT\"] = \"management\";\n    ServiceCategory[\"FINANCIAL\"] = \"financial\";\n    ServiceCategory[\"HR\"] = \"hr\";\n    ServiceCategory[\"OTHER\"] = \"other\";\n    return ServiceCategory;\n}({});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9zcmMvdHlwZXMvaW5kZXgudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFpRU8sc0NBQUtBOzs7Ozs7OztXQUFBQTtNQVFYO0FBYU0sNkNBQUtDOzs7Ozs7V0FBQUE7TUFNWCIsInNvdXJjZXMiOlsiL1VzZXJzL3RvbnlpZGljdWxsYS9EZXZlbG9wZXIvZnVyZmllbGQtbmV3L2ZmLWF1dGgtNjgwMC9zcmMvdHlwZXMvaW5kZXgudHMiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGludGVyZmFjZSBVc2VyIHtcbiAgaWQ6IHN0cmluZztcbiAgZW1haWw6IHN0cmluZztcbiAgZmlyc3ROYW1lOiBzdHJpbmc7XG4gIGxhc3ROYW1lOiBzdHJpbmc7XG4gIHJvbGU6IFVzZXJSb2xlO1xuICBpc0FjdGl2ZTogYm9vbGVhbjtcbiAgZW1haWxWZXJpZmllZDogYm9vbGVhbjtcbiAgY3JlYXRlZEF0OiBEYXRlO1xuICB1cGRhdGVkQXQ6IERhdGU7XG4gIGxhc3RMb2dpbkF0PzogRGF0ZTtcbiAgYXZhdGFyVXJsPzogc3RyaW5nO1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIENyZWF0ZVVzZXJSZXF1ZXN0IHtcbiAgZW1haWw6IHN0cmluZztcbiAgcGFzc3dvcmQ6IHN0cmluZztcbiAgZmlyc3ROYW1lOiBzdHJpbmc7XG4gIGxhc3ROYW1lOiBzdHJpbmc7XG4gIHJvbGU/OiBVc2VyUm9sZTtcbn1cblxuZXhwb3J0IGludGVyZmFjZSBMb2dpblJlcXVlc3Qge1xuICBlbWFpbDogc3RyaW5nO1xuICBwYXNzd29yZDogc3RyaW5nO1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIExvZ2luUmVzcG9uc2Uge1xuICB1c2VyOiBVc2VyO1xuICB0b2tlbjogc3RyaW5nO1xuICByZWZyZXNoVG9rZW46IHN0cmluZztcbiAgZXhwaXJlc0luOiBudW1iZXI7XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgVG9rZW5QYXlsb2FkIHtcbiAgdXNlcklkOiBzdHJpbmc7XG4gIGVtYWlsOiBzdHJpbmc7XG4gIHJvbGU6IFVzZXJSb2xlO1xuICBpYXQ6IG51bWJlcjtcbiAgZXhwOiBudW1iZXI7XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgUmVmcmVzaFRva2VuUmVxdWVzdCB7XG4gIHJlZnJlc2hUb2tlbjogc3RyaW5nO1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIFJlc2V0UGFzc3dvcmRSZXF1ZXN0IHtcbiAgZW1haWw6IHN0cmluZztcbn1cblxuZXhwb3J0IGludGVyZmFjZSBDb25maXJtUmVzZXRQYXNzd29yZFJlcXVlc3Qge1xuICB0b2tlbjogc3RyaW5nO1xuICBuZXdQYXNzd29yZDogc3RyaW5nO1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIENoYW5nZVBhc3N3b3JkUmVxdWVzdCB7XG4gIGN1cnJlbnRQYXNzd29yZDogc3RyaW5nO1xuICBuZXdQYXNzd29yZDogc3RyaW5nO1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIFVwZGF0ZVByb2ZpbGVSZXF1ZXN0IHtcbiAgZmlyc3ROYW1lPzogc3RyaW5nO1xuICBsYXN0TmFtZT86IHN0cmluZztcbn1cblxuZXhwb3J0IGVudW0gVXNlclJvbGUge1xuICBBRE1JTiA9ICdhZG1pbicsXG4gIFZFVEVSSU5BUklBTiA9ICd2ZXRlcmluYXJpYW4nLFxuICBOVVJTRSA9ICdudXJzZScsXG4gIFJFQ0VQVElPTklTVCA9ICdyZWNlcHRpb25pc3QnLFxuICBNQU5BR0VSID0gJ21hbmFnZXInLFxuICBTVEFGRiA9ICdzdGFmZicsXG4gIFVTRVIgPSAndXNlcidcbn1cblxuZXhwb3J0IGludGVyZmFjZSBTZXJ2aWNlIHtcbiAgaWQ6IHN0cmluZztcbiAgbmFtZTogc3RyaW5nO1xuICB1cmw6IHN0cmluZztcbiAgcG9ydDogbnVtYmVyO1xuICBzdGF0dXM6ICdvbmxpbmUnIHwgJ29mZmxpbmUnIHwgJ2Vycm9yJztcbiAgZGVzY3JpcHRpb246IHN0cmluZztcbiAgaWNvbjogc3RyaW5nO1xuICBjYXRlZ29yeTogU2VydmljZUNhdGVnb3J5O1xufVxuXG5leHBvcnQgZW51bSBTZXJ2aWNlQ2F0ZWdvcnkge1xuICBIRUFMVEhDQVJFID0gJ2hlYWx0aGNhcmUnLFxuICBNQU5BR0VNRU5UID0gJ21hbmFnZW1lbnQnLFxuICBGSU5BTkNJQUwgPSAnZmluYW5jaWFsJyxcbiAgSFIgPSAnaHInLFxuICBPVEhFUiA9ICdvdGhlcidcbn1cblxuZXhwb3J0IGludGVyZmFjZSBBcGlSZXNwb25zZTxUID0gYW55PiB7XG4gIHN1Y2Nlc3M6IGJvb2xlYW47XG4gIGRhdGE/OiBUO1xuICBtZXNzYWdlPzogc3RyaW5nO1xuICBlcnJvcj86IHN0cmluZztcbn1cblxuZXhwb3J0IGludGVyZmFjZSBBdXRoQ29udGV4dFR5cGUge1xuICB1c2VyOiBVc2VyIHwgbnVsbDtcbiAgdG9rZW46IHN0cmluZyB8IG51bGw7XG4gIGxvZ2luOiAoZW1haWw6IHN0cmluZywgcGFzc3dvcmQ6IHN0cmluZykgPT4gUHJvbWlzZTx2b2lkPjtcbiAgbG9nb3V0OiAoKSA9PiB2b2lkO1xuICByZWdpc3RlcjogKGRhdGE6IENyZWF0ZVVzZXJSZXF1ZXN0KSA9PiBQcm9taXNlPHZvaWQ+O1xuICB1cGRhdGVQcm9maWxlOiAoZGF0YTogVXBkYXRlUHJvZmlsZVJlcXVlc3QpID0+IFByb21pc2U8dm9pZD47XG4gIGNoYW5nZVBhc3N3b3JkOiAoZGF0YTogQ2hhbmdlUGFzc3dvcmRSZXF1ZXN0KSA9PiBQcm9taXNlPHZvaWQ+O1xuICBpc0xvYWRpbmc6IGJvb2xlYW47XG59Il0sIm5hbWVzIjpbIlVzZXJSb2xlIiwiU2VydmljZUNhdGVnb3J5Il0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./src/types/index.ts\n");

/***/ }),

/***/ "(ssr)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true!":
/*!******************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true! ***!
  \******************************************************************************************************/
/***/ (() => {



/***/ }),

/***/ "../app-render/action-async-storage.external":
/*!*******************************************************************************!*\
  !*** external "next/dist/server/app-render/action-async-storage.external.js" ***!
  \*******************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/action-async-storage.external.js");

/***/ }),

/***/ "../app-render/after-task-async-storage.external":
/*!***********************************************************************************!*\
  !*** external "next/dist/server/app-render/after-task-async-storage.external.js" ***!
  \***********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/after-task-async-storage.external.js");

/***/ }),

/***/ "../app-render/work-async-storage.external":
/*!*****************************************************************************!*\
  !*** external "next/dist/server/app-render/work-async-storage.external.js" ***!
  \*****************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/work-async-storage.external.js");

/***/ }),

/***/ "../app-render/work-unit-async-storage.external":
/*!**********************************************************************************!*\
  !*** external "next/dist/server/app-render/work-unit-async-storage.external.js" ***!
  \**********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/work-unit-async-storage.external.js");

/***/ }),

/***/ "buffer":
/*!*************************!*\
  !*** external "buffer" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("buffer");

/***/ }),

/***/ "crypto":
/*!*************************!*\
  !*** external "crypto" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("crypto");

/***/ }),

/***/ "http":
/*!***********************!*\
  !*** external "http" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("http");

/***/ }),

/***/ "https":
/*!************************!*\
  !*** external "https" ***!
  \************************/
/***/ ((module) => {

"use strict";
module.exports = require("https");

/***/ }),

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "next/dist/shared/lib/no-fallback-error.external":
/*!******************************************************************!*\
  !*** external "next/dist/shared/lib/no-fallback-error.external" ***!
  \******************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/no-fallback-error.external");

/***/ }),

/***/ "next/dist/shared/lib/router/utils/app-paths":
/*!**************************************************************!*\
  !*** external "next/dist/shared/lib/router/utils/app-paths" ***!
  \**************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/router/utils/app-paths");

/***/ }),

/***/ "punycode":
/*!***************************!*\
  !*** external "punycode" ***!
  \***************************/
/***/ ((module) => {

"use strict";
module.exports = require("punycode");

/***/ }),

/***/ "stream":
/*!*************************!*\
  !*** external "stream" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("stream");

/***/ }),

/***/ "url":
/*!**********************!*\
  !*** external "url" ***!
  \**********************/
/***/ ((module) => {

"use strict";
module.exports = require("url");

/***/ }),

/***/ "util":
/*!***********************!*\
  !*** external "util" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("util");

/***/ }),

/***/ "zlib":
/*!***********************!*\
  !*** external "zlib" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("zlib");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next","vendor-chunks/semver","vendor-chunks/bcryptjs","vendor-chunks/jsonwebtoken","vendor-chunks/lodash.includes","vendor-chunks/jws","vendor-chunks/lodash.once","vendor-chunks/jwa","vendor-chunks/lodash.isinteger","vendor-chunks/ecdsa-sig-formatter","vendor-chunks/lodash.isplainobject","vendor-chunks/ms","vendor-chunks/lodash.isstring","vendor-chunks/lodash.isnumber","vendor-chunks/lodash.isboolean","vendor-chunks/safe-buffer","vendor-chunks/buffer-equal-constant-time","vendor-chunks/@supabase","vendor-chunks/tr46","vendor-chunks/whatwg-url","vendor-chunks/tslib","vendor-chunks/webidl-conversions"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fauth%2Fprofile%2Froute&page=%2Fapi%2Fauth%2Fprofile%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fauth%2Fprofile%2Froute.ts&appDir=%2FUsers%2Ftonyidiculla%2FDeveloper%2Ffurfield-new%2Fff-auth-6800%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Ftonyidiculla%2FDeveloper%2Ffurfield-new%2Fff-auth-6800&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D&isGlobalNotFoundEnabled=!")));
module.exports = __webpack_exports__;

})();